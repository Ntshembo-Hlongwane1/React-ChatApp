{"ast":null,"code":"'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.compose = exports.merge = exports.$ = exports.style = exports.presets = exports.keyframes = exports.fontFace = exports.insertGlobal = exports.insertRule = exports.plugins = exports.styleSheet = undefined;\nexports.speedy = speedy;\nexports.simulations = simulations;\nexports.simulate = simulate;\nexports.cssLabels = cssLabels;\nexports.isLikeRule = isLikeRule;\nexports.idFor = idFor;\nexports.css = css;\nexports.rehydrate = rehydrate;\nexports.flush = flush;\nexports.select = select;\nexports.parent = parent;\nexports.media = media;\nexports.pseudo = pseudo;\nexports.active = active;\nexports.any = any;\nexports.checked = checked;\nexports.disabled = disabled;\nexports.empty = empty;\nexports.enabled = enabled;\nexports._default = _default;\nexports.first = first;\nexports.firstChild = firstChild;\nexports.firstOfType = firstOfType;\nexports.fullscreen = fullscreen;\nexports.focus = focus;\nexports.hover = hover;\nexports.indeterminate = indeterminate;\nexports.inRange = inRange;\nexports.invalid = invalid;\nexports.lastChild = lastChild;\nexports.lastOfType = lastOfType;\nexports.left = left;\nexports.link = link;\nexports.onlyChild = onlyChild;\nexports.onlyOfType = onlyOfType;\nexports.optional = optional;\nexports.outOfRange = outOfRange;\nexports.readOnly = readOnly;\nexports.readWrite = readWrite;\nexports.required = required;\nexports.right = right;\nexports.root = root;\nexports.scope = scope;\nexports.target = target;\nexports.valid = valid;\nexports.visited = visited;\nexports.dir = dir;\nexports.lang = lang;\nexports.not = not;\nexports.nthChild = nthChild;\nexports.nthLastChild = nthLastChild;\nexports.nthLastOfType = nthLastOfType;\nexports.nthOfType = nthOfType;\nexports.after = after;\nexports.before = before;\nexports.firstLetter = firstLetter;\nexports.firstLine = firstLine;\nexports.selection = selection;\nexports.backdrop = backdrop;\nexports.placeholder = placeholder;\nexports.cssFor = cssFor;\nexports.attribsFor = attribsFor;\n\nvar _objectAssign = require('object-assign');\n\nvar _objectAssign2 = _interopRequireDefault(_objectAssign);\n\nvar _sheet = require('./sheet.js');\n\nvar _CSSPropertyOperations = require('./CSSPropertyOperations');\n\nvar _clean = require('./clean.js');\n\nvar _clean2 = _interopRequireDefault(_clean);\n\nvar _plugins = require('./plugins');\n\nvar _hash = require('./hash');\n\nvar _hash2 = _interopRequireDefault(_hash);\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    default: obj\n  };\n}\n\nfunction _toConsumableArray(arr) {\n  if (Array.isArray(arr)) {\n    for (var i = 0, arr2 = Array(arr.length); i < arr.length; i++) {\n      arr2[i] = arr[i];\n    }\n\n    return arr2;\n  } else {\n    return Array.from(arr);\n  }\n}\n\nfunction _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n}\n/* stylesheet */\n\n\nvar styleSheet = exports.styleSheet = new _sheet.StyleSheet(); // an isomorphic StyleSheet shim. hides all the nitty gritty.\n// /**************** LIFTOFF IN 3... 2... 1... ****************/\n\nstyleSheet.inject(); //eslint-disable-line indent\n// /****************      TO THE MOOOOOOON     ****************/\n// convenience function to toggle speedy\n\nfunction speedy(bool) {\n  return styleSheet.speedy(bool);\n} // plugins\n// we include these by default\n\n\nvar plugins = exports.plugins = styleSheet.plugins = new _plugins.PluginSet([_plugins.prefixes, _plugins.contentWrap, _plugins.fallbacks]);\nplugins.media = new _plugins.PluginSet(); // neat! media, font-face, keyframes\n\nplugins.fontFace = new _plugins.PluginSet();\nplugins.keyframes = new _plugins.PluginSet([_plugins.prefixes, _plugins.fallbacks]); // define some constants\n\nvar isDev = process.env.NODE_ENV === 'development' || !process.env.NODE_ENV;\nvar isTest = process.env.NODE_ENV === 'test';\nvar isBrowser = typeof window !== 'undefined';\n/**** simulations  ****/\n// a flag to enable simulation meta tags on dom nodes\n// defaults to true in dev mode. recommend *not* to\n// toggle often.\n\nvar canSimulate = isDev; // we use these flags for issuing warnings when simulate is called\n// in prod / in incorrect order\n\nvar warned1 = false,\n    warned2 = false; // toggles simulation activity. shouldn't be needed in most cases\n\nfunction simulations() {\n  var bool = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : true;\n  canSimulate = !!bool;\n} // use this on dom nodes to 'simulate' pseudoclasses\n// <div {...hover({ color: 'red' })} {...simulate('hover', 'visited')}>...</div>\n// you can even send in some weird ones, as long as it's in simple format\n// and matches an existing rule on the element\n// eg simulate('nthChild2', ':hover:active') etc\n\n\nfunction simulate() {\n  for (var _len = arguments.length, pseudos = Array(_len), _key = 0; _key < _len; _key++) {\n    pseudos[_key] = arguments[_key];\n  }\n\n  pseudos = (0, _clean2.default)(pseudos);\n  if (!pseudos) return {};\n\n  if (!canSimulate) {\n    if (!warned1) {\n      console.warn('can\\'t simulate without once calling simulations(true)'); //eslint-disable-line no-console\n\n      warned1 = true;\n    }\n\n    if (!isDev && !isTest && !warned2) {\n      console.warn('don\\'t use simulation outside dev'); //eslint-disable-line no-console\n\n      warned2 = true;\n    }\n\n    return {};\n  }\n\n  return pseudos.reduce(function (o, p) {\n    return o['data-simulate-' + simple(p)] = '', o;\n  }, {});\n}\n/**** labels ****/\n// toggle for debug labels.\n// *shouldn't* have to mess with this manually\n\n\nvar hasLabels = isDev;\n\nfunction cssLabels(bool) {\n  hasLabels = !!bool;\n} // takes a string, converts to lowercase, strips out nonalphanumeric.\n\n\nfunction simple(str) {\n  var char = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : '';\n  return str.toLowerCase().replace(/[^a-z0-9]/g, char);\n} // hashes a string to something 'unique'\n// we use this to generate ids for styles\n\n\nfunction hashify(obj) {\n  var str = JSON.stringify(obj);\n  var toRet = (0, _hash2.default)(str).toString(36);\n\n  if (obj.label && obj.label.length > 0 && isDev) {\n    return simple(obj.label.join('.'), '-') + '-' + toRet;\n  }\n\n  return toRet;\n} // of shape { 'data-css-<id>': '' }\n\n\nfunction isLikeRule(rule) {\n  var keys = Object.keys(rule).filter(function (x) {\n    return x !== 'toString';\n  });\n\n  if (keys.length !== 1) {\n    return false;\n  }\n\n  return !!/data\\-css\\-([a-zA-Z0-9\\-_]+)/.exec(keys[0]);\n} // extracts id from a { 'data-css-<id>': ''} like object\n\n\nfunction idFor(rule) {\n  var keys = Object.keys(rule).filter(function (x) {\n    return x !== 'toString';\n  });\n  if (keys.length !== 1) throw new Error('not a rule');\n  var regex = /data\\-css\\-([a-zA-Z0-9\\-_]+)/;\n  var match = regex.exec(keys[0]);\n  if (!match) throw new Error('not a rule');\n  return match[1];\n} // from https://github.com/j2css/j2c/blob/5d381c2d721d04b54fabe6a165d587247c3087cb/src/helpers.js#L28-L61\n// \"Tokenizes\" the selectors into parts relevant for the next function.\n// Strings and comments are matched, but ignored afterwards.\n// This is not a full tokenizers. It only recognizes comas, parentheses,\n// strings and comments.\n// regexp generated by scripts/regexps.js then trimmed by hand\n\n\nvar selectorTokenizer = /[(),]|\"(?:\\\\.|[^\"\\n])*\"|'(?:\\\\.|[^'\\n])*'|\\/\\*[\\s\\S]*?\\*\\//g;\n/**\n * This will split a coma-separated selector list into individual selectors,\n * ignoring comas in strings, comments and in :pseudo-selectors(parameter, lists).\n *\n * @param {string} selector\n * @return {string[]}\n */\n\nfunction splitSelector(selector) {\n  if (selector.indexOf(',') === -1) {\n    return [selector];\n  }\n\n  var indices = [],\n      res = [],\n      inParen = 0,\n      o;\n  /*eslint-disable no-cond-assign*/\n\n  while (o = selectorTokenizer.exec(selector)) {\n    /*eslint-enable no-cond-assign*/\n    switch (o[0]) {\n      case '(':\n        inParen++;\n        break;\n\n      case ')':\n        inParen--;\n        break;\n\n      case ',':\n        if (inParen) break;\n        indices.push(o.index);\n    }\n  }\n\n  for (o = indices.length; o--;) {\n    res.unshift(selector.slice(indices[o] + 1));\n    selector = selector.slice(0, indices[o]);\n  }\n\n  res.unshift(selector);\n  return res;\n}\n\nfunction selector(id, path) {\n  if (!id) {\n    return path.replace(/\\&/g, '');\n  }\n\n  if (!path) return '.css-' + id + ',[data-css-' + id + ']';\n  var x = splitSelector(path).map(function (x) {\n    return x.indexOf('&') >= 0 ? [x.replace(/\\&/mg, '.css-' + id), x.replace(/\\&/mg, '[data-css-' + id + ']')].join(',') // todo - make sure each sub selector has an &\n    : '.css-' + id + x + ',[data-css-' + id + ']' + x;\n  }).join(',');\n\n  if (canSimulate && /^\\&\\:/.exec(path) && !/\\s/.exec(path)) {\n    x += ',.css-' + id + '[data-simulate-' + simple(path) + '],[data-css-' + id + '][data-simulate-' + simple(path) + ']';\n  }\n\n  return x;\n} // end https://github.com/j2css/j2c/blob/5d381c2d721d04b54fabe6a165d587247c3087cb/src/helpers.js#L28-L61\n\n\nfunction toCSS(_ref) {\n  var selector = _ref.selector,\n      style = _ref.style;\n  var result = plugins.transform({\n    selector: selector,\n    style: style\n  });\n  return result.selector + '{' + (0, _CSSPropertyOperations.createMarkupForStyles)(result.style) + '}';\n}\n\nfunction deconstruct(style) {\n  // we can be sure it's not infinitely nested here\n  var plain = void 0,\n      selects = void 0,\n      medias = void 0,\n      supports = void 0;\n  Object.keys(style).forEach(function (key) {\n    if (key.indexOf('&') >= 0) {\n      selects = selects || {};\n      selects[key] = style[key];\n    } else if (key.indexOf('@media') === 0) {\n      medias = medias || {};\n      medias[key] = deconstruct(style[key]);\n    } else if (key.indexOf('@supports') === 0) {\n      supports = supports || {};\n      supports[key] = deconstruct(style[key]);\n    } else if (key === 'label') {\n      if (style.label.length > 0) {\n        plain = plain || {};\n        plain.label = hasLabels ? style.label.join('.') : '';\n      }\n    } else {\n      plain = plain || {};\n      plain[key] = style[key];\n    }\n  });\n  return {\n    plain: plain,\n    selects: selects,\n    medias: medias,\n    supports: supports\n  };\n}\n\nfunction deconstructedStyleToCSS(id, style) {\n  var css = []; // plugins here\n\n  var plain = style.plain,\n      selects = style.selects,\n      medias = style.medias,\n      supports = style.supports;\n\n  if (plain) {\n    css.push(toCSS({\n      style: plain,\n      selector: selector(id)\n    }));\n  }\n\n  if (selects) {\n    Object.keys(selects).forEach(function (key) {\n      return css.push(toCSS({\n        style: selects[key],\n        selector: selector(id, key)\n      }));\n    });\n  }\n\n  if (medias) {\n    Object.keys(medias).forEach(function (key) {\n      return css.push(key + '{' + deconstructedStyleToCSS(id, medias[key]).join('') + '}');\n    });\n  }\n\n  if (supports) {\n    Object.keys(supports).forEach(function (key) {\n      return css.push(key + '{' + deconstructedStyleToCSS(id, supports[key]).join('') + '}');\n    });\n  }\n\n  return css;\n} // this cache to track which rules have\n// been inserted into the stylesheet\n\n\nvar inserted = styleSheet.inserted = {}; // and helpers to insert rules into said styleSheet\n\nfunction insert(spec) {\n  if (!inserted[spec.id]) {\n    inserted[spec.id] = true;\n    var deconstructed = deconstruct(spec.style);\n    var rules = deconstructedStyleToCSS(spec.id, deconstructed);\n    inserted[spec.id] = isBrowser ? true : rules;\n    rules.forEach(function (cssRule) {\n      return styleSheet.insert(cssRule);\n    });\n  }\n} // a simple cache to store generated rules\n\n\nvar registered = styleSheet.registered = {};\n\nfunction register(spec) {\n  if (!registered[spec.id]) {\n    registered[spec.id] = spec;\n  }\n}\n\nfunction _getRegistered(rule) {\n  if (isLikeRule(rule)) {\n    var ret = registered[idFor(rule)];\n\n    if (ret == null) {\n      throw new Error('[glamor] an unexpected rule cache miss occurred. This is probably a sign of multiple glamor instances in your app. See https://github.com/threepointone/glamor/issues/79');\n    }\n\n    return ret;\n  }\n\n  return rule;\n} // todo - perf\n\n\nvar ruleCache = {};\n\nfunction toRule(spec) {\n  register(spec);\n  insert(spec);\n\n  if (ruleCache[spec.id]) {\n    return ruleCache[spec.id];\n  }\n\n  var ret = _defineProperty({}, 'data-css-' + spec.id, hasLabels ? spec.label || '' : '');\n\n  Object.defineProperty(ret, 'toString', {\n    enumerable: false,\n    value: function value() {\n      return 'css-' + spec.id;\n    }\n  });\n  ruleCache[spec.id] = ret;\n  return ret;\n}\n\nfunction log() {\n  //eslint-disable-line no-unused-vars\n  console.log(this); //eslint-disable-line no-console\n\n  return this;\n}\n\nfunction isSelector(key) {\n  var possibles = [':', '.', '[', '>', ' '],\n      found = false,\n      ch = key.charAt(0);\n\n  for (var i = 0; i < possibles.length; i++) {\n    if (ch === possibles[i]) {\n      found = true;\n      break;\n    }\n  }\n\n  return found || key.indexOf('&') >= 0;\n}\n\nfunction joinSelectors(a, b) {\n  var as = splitSelector(a).map(function (a) {\n    return !(a.indexOf('&') >= 0) ? '&' + a : a;\n  });\n  var bs = splitSelector(b).map(function (b) {\n    return !(b.indexOf('&') >= 0) ? '&' + b : b;\n  });\n  return bs.reduce(function (arr, b) {\n    return arr.concat(as.map(function (a) {\n      return b.replace(/\\&/g, a);\n    }));\n  }, []).join(',');\n}\n\nfunction joinMediaQueries(a, b) {\n  return a ? '@media ' + a.substring(6) + ' and ' + b.substring(6) : b;\n}\n\nfunction isMediaQuery(key) {\n  return key.indexOf('@media') === 0;\n}\n\nfunction isSupports(key) {\n  return key.indexOf('@supports') === 0;\n}\n\nfunction joinSupports(a, b) {\n  return a ? '@supports ' + a.substring(9) + ' and ' + b.substring(9) : b;\n} // flatten a nested array\n\n\nfunction flatten(inArr) {\n  var arr = [];\n\n  for (var i = 0; i < inArr.length; i++) {\n    if (Array.isArray(inArr[i])) arr = arr.concat(flatten(inArr[i]));else arr = arr.concat(inArr[i]);\n  }\n\n  return arr;\n}\n\nvar prefixedPseudoSelectors = {\n  '::placeholder': ['::-webkit-input-placeholder', '::-moz-placeholder', '::-ms-input-placeholder'],\n  ':fullscreen': [':-webkit-full-screen', ':-moz-full-screen', ':-ms-fullscreen'] // mutable! modifies dest.\n\n};\n\nfunction build(dest, _ref2) {\n  var _ref2$selector = _ref2.selector,\n      selector = _ref2$selector === undefined ? '' : _ref2$selector,\n      _ref2$mq = _ref2.mq,\n      mq = _ref2$mq === undefined ? '' : _ref2$mq,\n      _ref2$supp = _ref2.supp,\n      supp = _ref2$supp === undefined ? '' : _ref2$supp,\n      _ref2$src = _ref2.src,\n      src = _ref2$src === undefined ? {} : _ref2$src;\n\n  if (!Array.isArray(src)) {\n    src = [src];\n  }\n\n  src = flatten(src);\n  src.forEach(function (_src) {\n    if (isLikeRule(_src)) {\n      var reg = _getRegistered(_src);\n\n      if (reg.type !== 'css') {\n        throw new Error('cannot merge this rule');\n      }\n\n      _src = reg.style;\n    }\n\n    _src = (0, _clean2.default)(_src);\n\n    if (_src && _src.composes) {\n      build(dest, {\n        selector: selector,\n        mq: mq,\n        supp: supp,\n        src: _src.composes\n      });\n    }\n\n    Object.keys(_src || {}).forEach(function (key) {\n      if (isSelector(key)) {\n        if (prefixedPseudoSelectors[key]) {\n          prefixedPseudoSelectors[key].forEach(function (p) {\n            return build(dest, {\n              selector: joinSelectors(selector, p),\n              mq: mq,\n              supp: supp,\n              src: _src[key]\n            });\n          });\n        }\n\n        build(dest, {\n          selector: joinSelectors(selector, key),\n          mq: mq,\n          supp: supp,\n          src: _src[key]\n        });\n      } else if (isMediaQuery(key)) {\n        build(dest, {\n          selector: selector,\n          mq: joinMediaQueries(mq, key),\n          supp: supp,\n          src: _src[key]\n        });\n      } else if (isSupports(key)) {\n        build(dest, {\n          selector: selector,\n          mq: mq,\n          supp: joinSupports(supp, key),\n          src: _src[key]\n        });\n      } else if (key === 'composes') {// ignore, we already dealth with it\n      } else {\n        var _dest = dest;\n\n        if (supp) {\n          _dest[supp] = _dest[supp] || {};\n          _dest = _dest[supp];\n        }\n\n        if (mq) {\n          _dest[mq] = _dest[mq] || {};\n          _dest = _dest[mq];\n        }\n\n        if (selector) {\n          _dest[selector] = _dest[selector] || {};\n          _dest = _dest[selector];\n        }\n\n        if (key === 'label') {\n          if (hasLabels) {\n            dest.label = dest.label.concat(_src.label);\n          }\n        } else {\n          _dest[key] = _src[key];\n        }\n      }\n    });\n  });\n}\n\nfunction _css(rules) {\n  var style = {\n    label: []\n  };\n  build(style, {\n    src: rules\n  }); // mutative! but worth it.\n\n  var spec = {\n    id: hashify(style),\n    style: style,\n    label: hasLabels ? style.label.join('.') : '',\n    type: 'css'\n  };\n  return toRule(spec);\n}\n\nvar nullrule = {// 'data-css-nil': ''\n};\nObject.defineProperty(nullrule, 'toString', {\n  enumerable: false,\n  value: function value() {\n    return 'css-nil';\n  }\n});\nvar inputCaches = typeof WeakMap !== 'undefined' ? [nullrule, new WeakMap(), new WeakMap(), new WeakMap()] : [nullrule];\nvar warnedWeakMapError = false;\n\nfunction multiIndexCache(fn) {\n  return function (args) {\n    if (inputCaches[args.length]) {\n      var coi = inputCaches[args.length];\n      var ctr = 0;\n\n      while (ctr < args.length - 1) {\n        if (!coi.has(args[ctr])) {\n          coi.set(args[ctr], new WeakMap());\n        }\n\n        coi = coi.get(args[ctr]);\n        ctr++;\n      }\n\n      if (coi.has(args[args.length - 1])) {\n        var ret = coi.get(args[ctr]);\n\n        if (registered[ret.toString().substring(4)]) {\n          // make sure it hasn't been flushed\n          return ret;\n        }\n      }\n    }\n\n    var value = fn(args);\n\n    if (inputCaches[args.length]) {\n      var _ctr = 0,\n          _coi = inputCaches[args.length];\n\n      while (_ctr < args.length - 1) {\n        _coi = _coi.get(args[_ctr]);\n        _ctr++;\n      }\n\n      try {\n        _coi.set(args[_ctr], value);\n      } catch (err) {\n        if (isDev && !warnedWeakMapError) {\n          var _console;\n\n          warnedWeakMapError = true;\n\n          (_console = console).warn.apply(_console, ['failed setting the WeakMap cache for args:'].concat(_toConsumableArray(args))); // eslint-disable-line no-console\n\n\n          console.warn('this should NOT happen, please file a bug on the github repo.'); // eslint-disable-line no-console\n        }\n      }\n    }\n\n    return value;\n  };\n}\n\nvar cachedCss = typeof WeakMap !== 'undefined' ? multiIndexCache(_css) : _css;\n\nfunction css() {\n  for (var _len2 = arguments.length, rules = Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {\n    rules[_key2] = arguments[_key2];\n  }\n\n  if (rules[0] && rules[0].length && rules[0].raw) {\n    throw new Error('you forgot to include glamor/babel in your babel plugins.');\n  }\n\n  rules = (0, _clean2.default)(rules);\n\n  if (!rules) {\n    return nullrule;\n  }\n\n  return cachedCss(rules);\n}\n\ncss.insert = function (css) {\n  var spec = {\n    id: hashify(css),\n    css: css,\n    type: 'raw'\n  };\n  register(spec);\n\n  if (!inserted[spec.id]) {\n    styleSheet.insert(spec.css);\n    inserted[spec.id] = isBrowser ? true : [spec.css];\n  }\n};\n\nvar insertRule = exports.insertRule = css.insert;\n\ncss.global = function (selector, style) {\n  style = (0, _clean2.default)(style);\n\n  if (style) {\n    return css.insert(toCSS({\n      selector: selector,\n      style: style\n    }));\n  }\n};\n\nvar insertGlobal = exports.insertGlobal = css.global;\n\nfunction insertKeyframe(spec) {\n  if (!inserted[spec.id]) {\n    var inner = Object.keys(spec.keyframes).map(function (kf) {\n      var result = plugins.keyframes.transform({\n        id: spec.id,\n        name: kf,\n        style: spec.keyframes[kf]\n      });\n      return result.name + '{' + (0, _CSSPropertyOperations.createMarkupForStyles)(result.style) + '}';\n    }).join('');\n    var rules = ['-webkit-', '-moz-', '-o-', ''].map(function (prefix) {\n      return '@' + prefix + 'keyframes ' + (spec.name + '_' + spec.id) + '{' + inner + '}';\n    });\n    rules.forEach(function (rule) {\n      return styleSheet.insert(rule);\n    });\n    inserted[spec.id] = isBrowser ? true : rules;\n  }\n}\n\ncss.keyframes = function (name, kfs) {\n  if (!kfs) {\n    kfs = name, name = 'animation';\n  } // do not ignore empty keyframe definitions for now.\n\n\n  kfs = (0, _clean2.default)(kfs) || {};\n  var spec = {\n    id: hashify({\n      name: name,\n      kfs: kfs\n    }),\n    type: 'keyframes',\n    name: name,\n    keyframes: kfs\n  };\n  register(spec);\n  insertKeyframe(spec);\n  return name + '_' + spec.id;\n}; // we don't go all out for fonts as much, giving a simple font loading strategy\n// use a fancier lib if you need moar power\n\n\ncss.fontFace = function (font) {\n  font = (0, _clean2.default)(font);\n  var spec = {\n    id: hashify(font),\n    type: 'font-face',\n    font: font\n  };\n  register(spec);\n  insertFontFace(spec);\n  return font.fontFamily;\n};\n\nvar fontFace = exports.fontFace = css.fontFace;\nvar keyframes = exports.keyframes = css.keyframes;\n\nfunction insertFontFace(spec) {\n  if (!inserted[spec.id]) {\n    var rule = '@font-face{' + (0, _CSSPropertyOperations.createMarkupForStyles)(spec.font) + '}';\n    styleSheet.insert(rule);\n    inserted[spec.id] = isBrowser ? true : [rule];\n  }\n} // rehydrate the insertion cache with ids sent from\n// renderStatic / renderStaticOptimized\n\n\nfunction rehydrate(ids) {\n  // load up ids\n  (0, _objectAssign2.default)(inserted, ids.reduce(function (o, i) {\n    return o[i] = true, o;\n  }, {})); // assume css loaded separately\n} // clears out the cache and empties the stylesheet\n// best for tests, though there might be some value for SSR.\n\n\nfunction flush() {\n  inserted = styleSheet.inserted = {};\n  registered = styleSheet.registered = {};\n  ruleCache = {};\n  styleSheet.flush();\n  styleSheet.inject();\n}\n\nvar presets = exports.presets = {\n  mobile: '(min-width: 400px)',\n  Mobile: '@media (min-width: 400px)',\n  phablet: '(min-width: 550px)',\n  Phablet: '@media (min-width: 550px)',\n  tablet: '(min-width: 750px)',\n  Tablet: '@media (min-width: 750px)',\n  desktop: '(min-width: 1000px)',\n  Desktop: '@media (min-width: 1000px)',\n  hd: '(min-width: 1200px)',\n  Hd: '@media (min-width: 1200px)'\n};\nvar style = exports.style = css;\n\nfunction select(selector) {\n  for (var _len3 = arguments.length, styles = Array(_len3 > 1 ? _len3 - 1 : 0), _key3 = 1; _key3 < _len3; _key3++) {\n    styles[_key3 - 1] = arguments[_key3];\n  }\n\n  if (!selector) {\n    return style(styles);\n  }\n\n  return css(_defineProperty({}, selector, styles));\n}\n\nvar $ = exports.$ = select;\n\nfunction parent(selector) {\n  for (var _len4 = arguments.length, styles = Array(_len4 > 1 ? _len4 - 1 : 0), _key4 = 1; _key4 < _len4; _key4++) {\n    styles[_key4 - 1] = arguments[_key4];\n  }\n\n  return css(_defineProperty({}, selector + ' &', styles));\n}\n\nvar merge = exports.merge = css;\nvar compose = exports.compose = css;\n\nfunction media(query) {\n  for (var _len5 = arguments.length, rules = Array(_len5 > 1 ? _len5 - 1 : 0), _key5 = 1; _key5 < _len5; _key5++) {\n    rules[_key5 - 1] = arguments[_key5];\n  }\n\n  return css(_defineProperty({}, '@media ' + query, rules));\n}\n\nfunction pseudo(selector) {\n  for (var _len6 = arguments.length, styles = Array(_len6 > 1 ? _len6 - 1 : 0), _key6 = 1; _key6 < _len6; _key6++) {\n    styles[_key6 - 1] = arguments[_key6];\n  }\n\n  return css(_defineProperty({}, selector, styles));\n} // allllll the pseudoclasses\n\n\nfunction active(x) {\n  return pseudo(':active', x);\n}\n\nfunction any(x) {\n  return pseudo(':any', x);\n}\n\nfunction checked(x) {\n  return pseudo(':checked', x);\n}\n\nfunction disabled(x) {\n  return pseudo(':disabled', x);\n}\n\nfunction empty(x) {\n  return pseudo(':empty', x);\n}\n\nfunction enabled(x) {\n  return pseudo(':enabled', x);\n}\n\nfunction _default(x) {\n  return pseudo(':default', x); // note '_default' name\n}\n\nfunction first(x) {\n  return pseudo(':first', x);\n}\n\nfunction firstChild(x) {\n  return pseudo(':first-child', x);\n}\n\nfunction firstOfType(x) {\n  return pseudo(':first-of-type', x);\n}\n\nfunction fullscreen(x) {\n  return pseudo(':fullscreen', x);\n}\n\nfunction focus(x) {\n  return pseudo(':focus', x);\n}\n\nfunction hover(x) {\n  return pseudo(':hover', x);\n}\n\nfunction indeterminate(x) {\n  return pseudo(':indeterminate', x);\n}\n\nfunction inRange(x) {\n  return pseudo(':in-range', x);\n}\n\nfunction invalid(x) {\n  return pseudo(':invalid', x);\n}\n\nfunction lastChild(x) {\n  return pseudo(':last-child', x);\n}\n\nfunction lastOfType(x) {\n  return pseudo(':last-of-type', x);\n}\n\nfunction left(x) {\n  return pseudo(':left', x);\n}\n\nfunction link(x) {\n  return pseudo(':link', x);\n}\n\nfunction onlyChild(x) {\n  return pseudo(':only-child', x);\n}\n\nfunction onlyOfType(x) {\n  return pseudo(':only-of-type', x);\n}\n\nfunction optional(x) {\n  return pseudo(':optional', x);\n}\n\nfunction outOfRange(x) {\n  return pseudo(':out-of-range', x);\n}\n\nfunction readOnly(x) {\n  return pseudo(':read-only', x);\n}\n\nfunction readWrite(x) {\n  return pseudo(':read-write', x);\n}\n\nfunction required(x) {\n  return pseudo(':required', x);\n}\n\nfunction right(x) {\n  return pseudo(':right', x);\n}\n\nfunction root(x) {\n  return pseudo(':root', x);\n}\n\nfunction scope(x) {\n  return pseudo(':scope', x);\n}\n\nfunction target(x) {\n  return pseudo(':target', x);\n}\n\nfunction valid(x) {\n  return pseudo(':valid', x);\n}\n\nfunction visited(x) {\n  return pseudo(':visited', x);\n} // parameterized pseudoclasses\n\n\nfunction dir(p, x) {\n  return pseudo(':dir(' + p + ')', x);\n}\n\nfunction lang(p, x) {\n  return pseudo(':lang(' + p + ')', x);\n}\n\nfunction not(p, x) {\n  // should this be a plugin?\n  var selector = p.split(',').map(function (x) {\n    return x.trim();\n  }).map(function (x) {\n    return ':not(' + x + ')';\n  });\n\n  if (selector.length === 1) {\n    return pseudo(':not(' + p + ')', x);\n  }\n\n  return select(selector.join(''), x);\n}\n\nfunction nthChild(p, x) {\n  return pseudo(':nth-child(' + p + ')', x);\n}\n\nfunction nthLastChild(p, x) {\n  return pseudo(':nth-last-child(' + p + ')', x);\n}\n\nfunction nthLastOfType(p, x) {\n  return pseudo(':nth-last-of-type(' + p + ')', x);\n}\n\nfunction nthOfType(p, x) {\n  return pseudo(':nth-of-type(' + p + ')', x);\n} // pseudoelements\n\n\nfunction after(x) {\n  return pseudo('::after', x);\n}\n\nfunction before(x) {\n  return pseudo('::before', x);\n}\n\nfunction firstLetter(x) {\n  return pseudo('::first-letter', x);\n}\n\nfunction firstLine(x) {\n  return pseudo('::first-line', x);\n}\n\nfunction selection(x) {\n  return pseudo('::selection', x);\n}\n\nfunction backdrop(x) {\n  return pseudo('::backdrop', x);\n}\n\nfunction placeholder(x) {\n  // https://github.com/threepointone/glamor/issues/14\n  return css({\n    '::placeholder': x\n  });\n}\n/*** helpers for web components ***/\n// https://github.com/threepointone/glamor/issues/16\n\n\nfunction cssFor() {\n  for (var _len7 = arguments.length, rules = Array(_len7), _key7 = 0; _key7 < _len7; _key7++) {\n    rules[_key7] = arguments[_key7];\n  }\n\n  rules = (0, _clean2.default)(rules);\n  return rules ? rules.map(function (r) {\n    var style = {\n      label: []\n    };\n    build(style, {\n      src: r\n    }); // mutative! but worth it.\n\n    return deconstructedStyleToCSS(hashify(style), deconstruct(style)).join('');\n  }).join('') : '';\n}\n\nfunction attribsFor() {\n  for (var _len8 = arguments.length, rules = Array(_len8), _key8 = 0; _key8 < _len8; _key8++) {\n    rules[_key8] = arguments[_key8];\n  }\n\n  rules = (0, _clean2.default)(rules);\n  var htmlAttributes = rules ? rules.map(function (rule) {\n    idFor(rule); // throwaway check for rule\n\n    var key = Object.keys(rule)[0],\n        value = rule[key];\n    return key + '=\"' + (value || '') + '\"';\n  }).join(' ') : '';\n  return htmlAttributes;\n}","map":null,"metadata":{},"sourceType":"script"}